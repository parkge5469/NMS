{"version":3,"sources":["model/model.ts","reducers/todo.ts","reducers/createReducer.ts","configureStore.tsx","reducers/index.ts","withRoot.tsx","pages/sub/FindIdPage.tsx","pages/sub/EmailFindId.tsx","pages/sub/PhoneFindId.tsx","pages/sub/FindPasswordPage.tsx","pages/sub/ChoiceFindPW.tsx","pages/sub/LoginPage.tsx","pages/sub/SignUp.tsx","components/HomeBox.tsx","pages/main/HomePage.tsx","actions/index.ts","actions/todo.ts","components/TodoTable.tsx","components/index.ts","components/TodoDialog.tsx","pages/main/TodoPage.tsx","routes.js","layout/Sub.tsx","layout/Main.tsx","App.tsx","ReduxRoot.tsx","index.tsx"],"names":["ActionType","initialState","handlers","todoList","_createReducer","Object","defineProperty","ADD_TODO","state","action","concat","toConsumableArray","payload","COMPLETE_TODO","map","t","id","objectSpread","completed","UNCOMPLETE_TODO","DELETE_TODO","filter","arguments","length","undefined","hasOwnProperty","type","persistConfig","key","version","storage","localforage","blacklist","history","createLogger","createBrowserHistory","middleware","applyMiddleware","thunk","persistedReducer","persistReducer","combineReducers","todoReducer","theme","createMuiTheme","palette","primary","light","main","dark","contrastText","secondary","withRoot","Component","props","react","ThemeProvider","CssBaseline","useStyles","makeStyles","card","width","height","textAlign","display","justifyContent","alignItems","flexFlow","container","bottomBorder","borderBottom","marginBottom","buttonForm","buttonSize","buttonStyle","fontSize","fontWeight","CustomButton","withStyles","root","color","getContrastText","orange","backgroundColor","&:hover","Button","FindIdPage","classes","Card","className","CardContent","react_router_dom","to","fullWidth","size","variant","findForm","inputForm","paddingRight","inputBoxGrid","gridTemplateColumns","inputBox","sendButton","inputStyle","EmailFindId","TextField","label","PhoneFindId","FindPasswordPage","placeholder","margin","radioGroup","formGroup","ChoiceFindPW","_React$useState","React","_React$useState2","slicedToArray","radioST","setRadioST","emailForm","phoneForm","FormControl","RadioGroup","onChange","e","target","value","FormControlLabel","control","Radio","labelPlacement","minHeight","paddingTop","paddingLeft","loginBox","loginForm","maxWidth","padding","paddingBottom","alignContent","minWidth","LoginButton","CssTextField","& label.Mui-focused","& .MuiInput-underline:after","borderBottomColor","& .MuiOutlinedInput-root","& fieldset","borderColor","&:hover fieldset","&.Mui-focused fieldset","LoginPage","setId","_React$useState3","_React$useState4","password","setPW","idInput","passwordInput","handleClick","axios","get","params","pw","then","data","st","alert","msg","handleKeyDown","handleChange","name","ref","onKeyDown","onClick","maxHeight","cardContent","gridContainer","input4","marginTop","button","formControl","buttonFormControl","gridGap","phoneFormControl","buttons","input4Button","textMask","SignUp","InputLabel","shrink","htmlFor","Select","native","react_input_mask_default","a","mask","styledBy","property","mapping","box","borderRadius","background","red","blue","text","HomeBox","other","objectWithoutProperties","Paper","assign","Typography","centerContainer","flex","flexDirection","HomePage","boxColor","setBoxColor","useSelector","gutterBottom","components_HomeBox","useActions","actions","deps","dispatch","useDispatch","useMemo","Array","isArray","bindActionCreators","addTodo","todo","completeTodo","todoId","getState","uncompleteTodo","deleteTodo","paper","table","TodoTable","todoActions","TodoActions","Table","TableHead","TableRow","TableCell","TableBody","n","hover","event","Checkbox","checked","IconButton","aria-label","Delete_default","textField","TodoDialog","open","onClose","newTodoText","setNewTodoText","handleClose","Math","random","Dialog","DialogTitle","multiline","DialogActions","breakpoints","down","buttonContainer","routes","path","component","layout","setOpen","Grid","components_TodoDialog","item","xs","components","RouteTag","react_router","v","from","content","connect","withWidth","Routes","Drawer","drawerHeader","Divider","List","ListItem","push","ListItemIcon","Home_default","ListItemText","TodoIcon","uncompletedTodos","Badge","badgeContent","FormatListNumbered_default","zIndex","overflow","appFrame","position","appBar","drawer","navIconHide","up","mixins","toolbar","drawerPaper","default","mobileOpen","setMobileOpen","handleDrawerToggle","AppBar","Toolbar","Menu_default","noWrap","isWidthUp","Hidden","mdUp","anchor","ModalProps","keepMounted","Main_Drawer","smDown","Sub","Main","store","createStore","persistor","persistStore","configureStore","ReduxRoot","es","integration_react","loading","src_App","rootEl","document","getElementById","ReactDOM","src_ReduxRoot"],"mappings":"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","file":"static/js/main.00d51a2b.chunk.js","sourcesContent":["\r\nexport interface Todo {\r\n    id: number;\r\n    text: string;\r\n    completed: boolean;\r\n}\r\n\r\nexport enum ActionType {\r\n    ADD_TODO,\r\n    DELETE_TODO,\r\n    COMPLETE_TODO,\r\n    UNCOMPLETE_TODO,\r\n}\r\n\r\nexport interface Action<T> {\r\n    type: ActionType;\r\n    payload: T;\r\n}","import { Action, ActionType, Todo } from \"../model/model\";\r\nimport createReducer from \"./createReducer\";\r\n\r\nexport const todoList = createReducer<Todo[]>([], {\r\n\t[ActionType.ADD_TODO](state: Todo[], action: Action<Todo>) {\r\n\t\treturn [...state, action.payload];\r\n\t},\r\n\t[ActionType.COMPLETE_TODO](state: Todo[], action: Action<number>) {\r\n\t\t// search after todo item with the given id and set completed to true\r\n\t\treturn state.map(t =>\r\n\t\t\tt.id === action.payload ? { ...t, completed: true } : t\r\n\t\t);\r\n\t},\r\n\t[ActionType.UNCOMPLETE_TODO](state: Todo[], action: Action<number>) {\r\n\t\t// search after todo item with the given id and set completed to false\r\n\t\treturn state.map(t =>\r\n\t\t\tt.id === action.payload ? { ...t, completed: false } : t\r\n\t\t);\r\n\t},\r\n\t[ActionType.DELETE_TODO](state: Todo[], action: Action<number>) {\r\n\t\t// remove all todos with the given id\r\n\t\treturn state.filter(t => t.id !== action.payload);\r\n\t},\r\n});\r\n","/**\r\n * Created by toni on 12.03.2017.\r\n */\r\nimport { Reducer } from \"redux\";\r\nimport { Action } from \"../model/model\";\r\n\r\nexport default function createReducer<S>(\r\n\tinitialState: S,\r\n\thandlers: any\r\n): Reducer<S> {\r\n\tconst r = (state: S = initialState, action: Action<S>): S => {\r\n\t\tif (handlers.hasOwnProperty(action.type)) {\r\n\t\t\treturn handlers[action.type](state, action);\r\n\t\t} else {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t};\r\n\r\n\treturn r as Reducer<S>;\r\n}\r\n","import { createBrowserHistory } from \"history\";\r\nimport * as localforage from \"localforage\";\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport { PersistConfig, persistReducer, persistStore } from \"redux-persist\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst persistConfig: PersistConfig = {\r\n\tkey: \"root\",\r\n\tversion: 1,\r\n\tstorage: localforage,\r\n\tblacklist: [],\r\n};\r\n\r\nconst logger = (createLogger as any)();\r\nconst history = createBrowserHistory();\r\n\r\nconst dev = process.env.NODE_ENV === \"development\";\r\n\r\nlet middleware = dev ? applyMiddleware(logger, thunk) : applyMiddleware(thunk);\r\n\r\nif (dev) {\r\n\tmiddleware = composeWithDevTools(middleware);\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer(history));\r\n\r\nexport default () => {\r\n\tconst store = createStore(persistedReducer, {}, middleware);\r\n\tconst persistor = persistStore(store);\r\n\treturn { store, persistor };\r\n};\r\n\r\nexport { history };\r\n","import { History } from \"history\";\r\nimport { combineReducers } from \"redux\";\r\nimport { Todo } from \"../model/model\";\r\nimport * as todoReducer from \"./todo\";\r\n\r\nexport interface RootState {\r\n\ttodoList: Todo[];\r\n}\r\n\r\nexport default (history: History) =>\r\n\tcombineReducers({\r\n\t\t...todoReducer,\r\n\t});\r\n","import { CssBaseline } from \"@material-ui/core\";\r\nimport { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { ThemeProvider } from \"@material-ui/styles\";\r\nimport * as React from \"react\";\r\n\r\n// A theme with custom primary and secondary color.\r\n// It's optional.\r\nconst theme = createMuiTheme({\r\n\tpalette: {\r\n\t\tprimary: {\r\n\t\t\tlight: \"#e5e5e5\",\r\n\t\t\tmain: \"#727272\",\r\n\t\t\tdark: \"#363839\",\r\n\t\t\tcontrastText: \"#fff\",\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tlight: \"#ff5e50\",\r\n\t\t\tmain: \"#e41e26\",\r\n\t\t\tdark: \"#a90000\",\r\n\t\t\tcontrastText: \"#fff\",\r\n\t\t},\r\n\t},\r\n});\r\n\r\nfunction withRoot(Component: any) {\r\n\tfunction WithRoot(props: object) {\r\n\t\t// MuiThemeProvider makes the theme available down the React tree\r\n\t\t// thanks to React context.\r\n\t\treturn (\r\n\t\t\t<ThemeProvider theme={theme}>\r\n\t\t\t\t{/* Reboot kickstart an elegant, consistent, and simple baseline to build upon. */}\r\n\t\t\t\t<CssBaseline />\r\n\t\t\t\t<Component {...props} />\r\n\t\t\t</ThemeProvider>\r\n\t\t);\r\n\t}\r\n\r\n\treturn WithRoot;\r\n}\r\n\r\nexport default withRoot;\r\n","import * as React from 'react'\r\nimport { RouteComponentProps,NavLink } from 'react-router-dom';\r\nimport { makeStyles,withStyles } from '@material-ui/styles';\r\nimport { Button,Card,CardContent } from '@material-ui/core';\r\nimport { orange } from '@material-ui/core/colors'\r\n\r\ninterface Props extends RouteComponentProps<void>{}\r\n\r\nconst FindIdPage = (props:Props) => {\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <Card className={classes.card}>\r\n            \r\n            <CardContent className={classes.container}>\r\n                <div className={classes.bottomBorder}>\r\n                    <h1>아이디 찾기</h1>\r\n                </div>\r\n                <div className={classes.buttonForm}>\r\n                    <NavLink to='phoneFindId' className={classes.buttonSize}>\r\n                        <CustomButton \r\n                            className={classes.buttonStyle}\r\n                            fullWidth={true} \r\n                            size='large' \r\n                            variant='contained'\r\n                            color='primary'\r\n                        >\r\n                            휴대전화로 찾기\r\n                        </CustomButton>\r\n                    </NavLink>\r\n\r\n                    <NavLink to='emailFindId' className={classes.buttonSize}>\r\n                        <CustomButton \r\n                            className={classes.buttonStyle}\r\n                            fullWidth={true} \r\n                            size='large' \r\n                            variant='contained'\r\n                            color='primary'\r\n                        > \r\n                            이메일로 찾기\r\n                        </CustomButton>\r\n                    </NavLink>\r\n                </div>\r\n                \r\n                   \r\n                \r\n\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        width: '70%',\r\n        height: '70%',\r\n        textAlign: \"center\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flexFlow: 'column',\r\n\r\n    },\r\n    container: {\r\n        width: \"60%\",\r\n        height: \"80%\",\r\n        display: \"flex\",\r\n        flexFlow: \"column\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n    },\r\n    bottomBorder: {\r\n        textAlign: \"left\",\r\n        width: \"100%\",\r\n        borderBottom: \"3px solid black\",\r\n        marginBottom: 20\r\n    },\r\n    buttonForm: {\r\n        width: \"100%\",\r\n        height: \"50%\",\r\n        display: \"flex\",\r\n        flexFlow: \"column\",\r\n        justifyContent: \"space-around\"\r\n    },\r\n    buttonSize: {\r\n        width: \"100%\",\r\n        height: \"30%\",\r\n    },\r\n    buttonStyle: {\r\n        fontSize: 20,\r\n        fontWeight: \"bold\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n       \r\n    }\r\n})\r\n\r\nconst CustomButton = withStyles(theme => ({\r\n    root: {\r\n        color: theme.palette.getContrastText(orange[700]),\r\n        backgroundColor: orange[700],\r\n        '&:hover': {\r\n            backgroundColor: orange[900]\r\n        }\r\n    }\r\n}))(Button)\r\n\r\nexport default FindIdPage;","import * as React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Button,TextField,Card,CardContent } from '@material-ui/core';\r\nimport { makeStyles,withStyles } from '@material-ui/styles';\r\n\r\n\r\ninterface Props extends RouteComponentProps<void>{}\r\n\r\nconst EmailFindId = (props:Props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardContent className={classes.findForm}>\r\n                <div className={classes.bottomBorder}>\r\n                    <h1>이메일로 찾기</h1>\r\n                </div>\r\n                <div className={classes.inputBox}>\r\n                    <div className={classes.inputBoxGrid}>\r\n                        <div className={classes.inputForm}>\r\n                            <TextField className={classes.inputStyle} label=\"이름\" />\r\n                            <TextField className={classes.inputStyle} label=\"이메일 주소\" />\r\n                        </div>\r\n                        <div className={classes.buttonForm}>\r\n                            <Button className={classes.sendButton} variant='contained' color='primary'>인증번호 전송</Button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        height: \"60%\",\r\n        width: '60%',\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    findForm: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flexFlow: \"column\",\r\n        width: \"60%\",\r\n        height: \"80%\",\r\n    },\r\n    buttonStyle: {\r\n        '&:hover': {\r\n            backgroundColor: \"gray\"\r\n        }\r\n    },\r\n    inputForm: {\r\n        width: \"100%\",\r\n        height: \"60%\",\r\n        display: \"flex\",\r\n        flexFlow: \"column\",\r\n        justifyContent: \"flex-end\",\r\n        alignItems: \"center\",\r\n        paddingRight: 10\r\n\r\n    },\r\n    inputBoxGrid: {\r\n        height: \"50%\",\r\n        width: \"90%\",\r\n        display: \"grid\",\r\n        gridTemplateColumns: '2fr 1fr',\r\n    },\r\n    inputBox: {\r\n        height: \"60%\",\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        flexFlow: \"flex-start\",\r\n        justifyContent: \"center\",\r\n        alignItems: 'center',\r\n    },\r\n    buttonForm: {\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        height: \"100%\",\r\n        alignItems: \"center\", \r\n    },\r\n    sendButton: {\r\n        textAlign: \"center\",\r\n        height: \"30%\",\r\n        width: \"100%\",\r\n    },\r\n    inputStyle: {\r\n        width: \"100%\",\r\n        \r\n    },\r\n    bottomBorder: {\r\n        textAlign: \"left\",\r\n        width: \"100%\",\r\n        borderBottom: \"3px solid black\",\r\n        marginBottom: 20\r\n    },\r\n})\r\n\r\n\r\nexport default EmailFindId;","import * as React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Button,TextField,Card,CardContent } from '@material-ui/core';\r\nimport { makeStyles,withStyles } from '@material-ui/styles';\r\nimport {} from '@material-ui/core/colors';\r\n\r\ninterface Props extends RouteComponentProps<void>{}\r\n\r\nconst PhoneFindId = (props:Props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardContent className={classes.findForm}>\r\n                <div className={classes.bottomBorder}>\r\n                    <h1>전화번호로 찾기</h1>\r\n                </div>\r\n                <div className={classes.inputBox}>\r\n                    <div className={classes.inputBoxGrid}>\r\n                        <div className={classes.inputForm}>\r\n                            <TextField className={classes.inputStyle} label=\"이름\" />\r\n                            <TextField className={classes.inputStyle} label=\"전화번호\" />\r\n                        </div>\r\n                        <div className={classes.buttonForm}>\r\n                            <Button className={classes.sendButton} variant='contained' color='primary'>인증번호 전송</Button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        height: \"60%\",\r\n        width: '60%',\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    findForm: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flexFlow: \"column\",\r\n        width: \"60%\",\r\n        height: \"60%\",\r\n    },\r\n    buttonStyle: {\r\n        '&:hover': {\r\n            backgroundColor: \"gray\"\r\n        }\r\n    },\r\n    inputForm: {\r\n        width: \"100%\",\r\n        height: \"60%\",\r\n        display: \"flex\",\r\n        flexFlow: \"column\",\r\n        justifyContent: \"flex-end\",\r\n        alignItems: \"flex-end\",\r\n        paddingRight: 10\r\n\r\n    },\r\n    inputBoxGrid: {\r\n        height: \"50%\",\r\n        width: \"90%\",\r\n        display: \"grid\",\r\n        gridTemplateColumns: '2fr 1fr',\r\n    },\r\n    inputBox: {\r\n        height: \"60%\",\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        flexFlow: \"flex-start\",\r\n        justifyContent: \"center\",\r\n        alignItems: 'center',\r\n    },\r\n    buttonForm: {\r\n        width: \"100%\",\r\n        display: \"flex\",\r\n        height: \"100%\",\r\n        alignItems: \"center\", \r\n    },\r\n    sendButton: {\r\n        textAlign: \"center\",\r\n        height: \"30%\",\r\n        width: \"100%\",\r\n    },\r\n    inputStyle: {\r\n        width: \"100%\",\r\n        \r\n    },\r\n    bottomBorder: {\r\n        textAlign: \"left\",\r\n        width: \"100%\",\r\n        borderBottom: \"3px solid black\",\r\n        marginBottom: 20\r\n    },\r\n})\r\n\r\nexport default PhoneFindId;","import * as React from 'react';\r\nimport { RouteComponentProps,NavLink } from 'react-router-dom';\r\nimport { Button,TextField,Card,CardContent } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\n\r\n\r\ninterface Props extends RouteComponentProps<void> {}\r\n\r\nconst FindPasswordPage = (props:Props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Card className={classes.card} >\r\n            <CardContent className={classes.container}>\r\n                <div className={classes.bottomBorder}>\r\n                    <h1>비밀번호 찾기</h1>\r\n                </div>\r\n                <TextField\r\n                    id=\"outlined-full-width\"\r\n                    placeholder=\"아이디를 입력하세요.\"\r\n\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                />\r\n                <NavLink to='choiceFindPW' className={classes.buttonSize}><Button variant='contained' color='primary' size='large' fullWidth={true}> 다음</Button></NavLink>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        height: \"50%\",\r\n        width: '50%',\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    container: {\r\n        width: \"60%\",\r\n        height: \"60%\",\r\n        display: \"flex\",\r\n        flexFlow: \"column\"\r\n    },\r\n    bottomBorder: {\r\n        textAlign: \"left\",\r\n        width: \"100%\",\r\n        borderBottom: \"3px solid black\",\r\n        marginBottom: 20\r\n    },\r\n    buttonSize: {\r\n        width: '100%',\r\n    },\r\n})\r\n\r\nexport default FindPasswordPage;\r\n","import * as React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { Button,TextField,Radio,RadioGroup,FormControl,FormControlLabel,Card,CardContent } from '@material-ui/core';\r\nimport { makeStyles,withStyles } from '@material-ui/styles';\r\n\r\n\r\ninterface Props extends RouteComponentProps<void>{}\r\n\r\n\r\nconst ChoiceFindPW = (props:Props) => {\r\n    const classes = useStyles();\r\n    const [radioST,setRadioST] = React.useState('');\r\n    \r\n\r\n    const handleChange = (e:any) => {\r\n        setRadioST(e.target.value);\r\n        //console.log('radioST : '+radioST);\r\n    }\r\n\r\n    const emailForm = (\r\n        <div className={classes.inputBox}>\r\n            <div className={classes.inputForm}>\r\n                <TextField className={classes.inputStyle} label=\"이름\" />\r\n                <TextField className={classes.inputStyle} label=\"이메일\" />\r\n            </div>\r\n            <div className={classes.buttonForm}>\r\n                <Button className={classes.sendButton} variant='contained' color='primary'>인증번호 전송</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    const phoneForm = (\r\n        <div className={classes.inputBox}>\r\n            <div className={classes.inputForm}>\r\n                <TextField className={classes.inputStyle} label=\"이름\" />\r\n                <TextField className={classes.inputStyle} label=\"전화번호\" />\r\n            </div>\r\n            <div className={classes.buttonForm}>\r\n                <Button className={classes.sendButton} variant='contained' color='primary'>인증번호 전송</Button>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardContent className={classes.radioGroup} >\r\n                <FormControl\r\n                    className={classes.formGroup}\r\n                >\r\n                    <RadioGroup \r\n                        onChange={handleChange}\r\n                    >  \r\n                        <div></div>\r\n                        <FormControlLabel\r\n                            value='phone'\r\n                            control={<Radio color='primary' />}\r\n                            labelPlacement='end'\r\n                            label='휴대전화로 찾기'\r\n                        />\r\n                        {'phone'===radioST? (phoneForm):(<div></div>)}\r\n                        <FormControlLabel\r\n                            value='email'\r\n                            control={<Radio color='primary' />}\r\n                            labelPlacement='end'\r\n                            label='이메일로 찾기'\r\n                        />\r\n                        {'email'===radioST? (emailForm):(<div></div>)}\r\n                    </RadioGroup>\r\n                </FormControl>\r\n                \r\n            </CardContent>\r\n\r\n        </Card>\r\n    )\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        height: \"50%\",\r\n        width: '60%',\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n\r\n    },\r\n    radioGroup: {\r\n        height: \"60%\",\r\n        width: \"80%\",\r\n        display: \"flex\",\r\n        flexFlow: \"column\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"flex-start\",\r\n\r\n    },\r\n    formGroup: {\r\n        width: \"100%\",\r\n    },\r\n    inputForm: {\r\n        width: \"100%\",\r\n        height: \"60%\",\r\n        display: \"flex\",\r\n        flexFlow: \"column\",\r\n        justifyContent: \"flex-end\",\r\n        alignItems: \"flex-end\",\r\n        paddingRight: 10\r\n\r\n    },\r\n    inputBox: {\r\n        height: \"40%\",\r\n        width: \"80%\",\r\n        display: \"flex\",\r\n        flexFlow: \"flex-start\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"flex-end\",\r\n    },\r\n    buttonForm: {\r\n        width: \"40%\",\r\n        display: \"flex\",\r\n        height: \"100%\",\r\n        alignItems: \"center\", \r\n    },\r\n    sendButton: {\r\n        textAlign: \"center\",\r\n        height: \"15%\",\r\n        width: \"100%\",\r\n    },\r\n    inputStyle: {\r\n        width: \"70%\",\r\n        \r\n    }\r\n    \r\n})\r\n\r\nexport default ChoiceFindPW;\r\n","import * as React from 'react';\r\nimport { RouteComponentProps,NavLink } from 'react-router-dom';\r\nimport { makeStyles, withStyles } from '@material-ui/styles'\r\nimport { Card,CardContent,Button,TextField } from '@material-ui/core';\r\nimport { orange } from '@material-ui/core/colors';\r\nimport axios, {AxiosRequestConfig} from 'axios';\r\n\r\ninterface Props extends RouteComponentProps<void>{}\r\ninterface LoginProps {\r\n    id: String,\r\n    pw: String\r\n}\r\n\r\n\r\n\r\nconst LoginPage = (props:Props) => {\r\n    const classes = useStyles();\r\n    const [ id,setId ] = React.useState('');\r\n    const [ password,setPW ] = React.useState(''); \r\n    const idInput = React.useRef<any>();   \r\n    const passwordInput = React.useRef<any>();    \r\n\r\n    function handleClick(): void {\r\n        axios.get('http://localhost:3000/axios/Login',{\r\n           params: {\r\n            id: id,\r\n            pw: password\r\n           }\r\n        })\r\n        .then((data) => {\r\n            if(!data.data.st) {\r\n                alert(data.data.msg);\r\n            }\r\n            // console.log(data);\r\n        })\r\n    }\r\n\r\n    function handleKeyDown(e:React.KeyboardEvent): void {\r\n        if(e.key === 'Enter') {\r\n            handleClick();\r\n        }\r\n    }\r\n\r\n    function handleChange(e:React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>): void{\r\n        const value = e.target.value;\r\n        const name = e.target.name;\r\n        if('id'===name) {\r\n            setId(value);\r\n        }else {\r\n            setPW(value);\r\n        }\r\n        // console.log('LoginPage-HandleChange-ID : ' + JSON.stringify(id));\r\n        // console.log('LoginPage-HandleChange-PW : ' + JSON.stringify(password));\r\n     \r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.loginBox}>\r\n                <Card className={classes.card}>\r\n                    <h1>\r\n                        LOGIN\r\n                    </h1>\r\n                    <CardContent>\r\n                        <div className={classes.loginForm}>\r\n                            <div className={classes.inputForm}>\r\n                                <CssTextField ref={idInput} name='id' id=\"custom-css-standard-input\" label=\"ID\" onChange={handleChange} onKeyDown={handleKeyDown} />\r\n                                <CssTextField ref={passwordInput} name='pw' id=\"custom-css-standard-input\" label=\"Password\" type='password' onChange={handleChange} onKeyDown={handleKeyDown} />\r\n                            </div>\r\n\r\n                            \r\n                                <LoginButton variant='contained' color='primary' fullWidth={true} onClick={handleClick} >\r\n                                    로그인\r\n                                </LoginButton>\r\n                            \r\n                            <div className={classes.buttonForm}>\r\n                                <NavLink to='findId'><Button className={classes.buttonStyle} variant='contained' color='primary'>아이디 찾기</Button></NavLink>\r\n                                <NavLink to='findPassword'><Button className={classes.buttonStyle} variant='contained' color='primary'>비밀번호 찾기</Button></NavLink>\r\n                                <NavLink to='signUp'><Button className={classes.buttonStyle} variant='contained' color='primary'>회원가입</Button></NavLink>\r\n                            </div>\r\n                        </div>\r\n                    </CardContent>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: \"100%\",\r\n        minHeight: \"100%\",\r\n\t\ttextAlign: \"center\",\r\n\t\tpaddingTop: 20,\r\n\t\tpaddingLeft: 15,\r\n\t\tpaddingRight: 15,\r\n    },\r\n    loginBox: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n\r\n    },\r\n    loginForm: {\r\n        height: \"100%\",\r\n        display: \"flex\",\r\n        flexFlow: \"column\",\r\n        justifyContent:\"space-around\",\r\n    },\r\n    card: {\r\n        maxWidth: 500,\r\n        padding: 30\r\n    },\r\n    inputForm: {\r\n        height: \"30%\",\r\n        display: \"flex\",\r\n        flexFlow: \"column\",\r\n        paddingBottom: 30\r\n    },\r\n    buttonForm: {\r\n        width: 360,\r\n        display: \"flex\",\r\n        flexFlow: \"row\",\r\n        justifyContent: \"space-between\",\r\n        alignContent: \"stretch\",\r\n        paddingTop: 10,\r\n        \r\n    },\r\n    buttonStyle: {\r\n        minWidth: 90 \r\n    },\r\n    \r\n})\r\n\r\nconst LoginButton = withStyles(theme => ({\r\n    root: {\r\n        \r\n        color: theme.palette.getContrastText(orange[700]),\r\n        backgroundColor: orange[700],\r\n        '&:hover' : {\r\n            backgroundColor: orange[900],\r\n        }\r\n    }\r\n}))(Button)\r\n\r\nconst CssTextField = withStyles({\r\n    root: {\r\n      '& label.Mui-focused': {\r\n        color: 'green',\r\n      },\r\n      '& .MuiInput-underline:after': {\r\n        borderBottomColor: 'green',\r\n      },\r\n      '& .MuiOutlinedInput-root': {\r\n        '& fieldset': {\r\n          borderColor: 'red',\r\n        },\r\n        '&:hover fieldset': {\r\n          borderColor: 'yellow',\r\n        },\r\n        '&.Mui-focused fieldset': {\r\n          borderColor: 'green',\r\n        },\r\n      },\r\n    },\r\n  })(TextField);\r\n\r\nexport default LoginPage;","import * as React from 'react';\r\nimport { RouteComponentProps,NavLink } from 'react-router-dom';\r\nimport { Card,CardContent,TextField,Button,FormControl,InputLabel,Select } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {} from '@material-ui/core/colors';\r\nimport MaskedInput from 'react-text-mask';\r\nimport InputMask from 'react-input-mask';\r\n\r\ninterface Props extends RouteComponentProps<void>{}\r\n\r\n\r\nconst SignUp = (props:Props) => {\r\n    const classes = useStyles();\r\n\r\n    // const TextMaskCustom = () => {\r\n    //     return(\r\n    //         <MaskedInput\r\n    //             mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\r\n    //             showMask\r\n    //             className={classes.textMask}\r\n    //         />\r\n    //     )\r\n    // }\r\n    return (\r\n        <Card className={classes.card}>\r\n            \r\n            <CardContent className={classes.cardContent}>\r\n                <div className={classes.bottomBorder}>\r\n                    <h1>회원가입</h1>\r\n                </div>\r\n                <div className={classes.gridContainer}>\r\n                    <div className={classes.inputBox}>\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel shrink htmlFor=\"bootstrap-input\">\r\n                                아이디 *\r\n                            </InputLabel>\r\n                            <TextField\r\n                                id=\"outlined-full-width\"\r\n                                placeholder=\"아이디를 입력하세요.\"\r\n\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormControl>\r\n                    </div>\r\n            \r\n                    <div className={classes.inputBox}>\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel shrink htmlFor=\"bootstrap-input\">\r\n                                비밀번호 *\r\n                            </InputLabel>\r\n                            <TextField\r\n                                id=\"outlined-full-width\"\r\n                                placeholder=\"비밀번호를 입력하세요.\"\r\n\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormControl>\r\n                    </div>\r\n                    \r\n                    <div className={classes.inputBox}>\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel shrink htmlFor=\"bootstrap-input\">\r\n                                비밀번호 확인 *\r\n                            </InputLabel>\r\n                            <TextField\r\n                                id=\"outlined-full-width\"\r\n                                placeholder=\"비밀번호를 입력하세요.\"\r\n\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormControl>\r\n                    </div>\r\n                    \r\n\r\n                \r\n                    \r\n                    <div className={classes.inputBox}>\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel shrink htmlFor=\"bootstrap-input\">\r\n                                이름 *\r\n                            </InputLabel>\r\n                            <TextField\r\n                                id=\"outlined-full-width\"\r\n                                placeholder=\"이름을 입력하세요.\"\r\n\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                        </FormControl>\r\n                    </div>\r\n                    \r\n                    <div className={classes.inputBox}>\r\n                        <FormControl className={classes.formControl}>\r\n                            <InputLabel shrink htmlFor=\"bootstrap-input\">\r\n                                구분 *\r\n                            </InputLabel>\r\n                            <Select\r\n                                native\r\n                                name=\"age\"\r\n                                \r\n\r\n                            >\r\n                                <option value=\"\">선택하세요.</option>\r\n                                <option value={10}>Ten</option>\r\n                                <option value={20}>Twenty</option>\r\n                                <option value={30}>Thirty</option>\r\n                            </Select>\r\n                            \r\n                        </FormControl>\r\n                    </div>\r\n                    \r\n                    \r\n                \r\n                \r\n                    <div className={classes.inputBox}>\r\n                        <FormControl className={classes.phoneFormControl}>\r\n                            <InputLabel shrink htmlFor=\"bootstrap-input\">\r\n                                전화번호 *\r\n                            </InputLabel>\r\n                            <TextField\r\n                                \r\n                                placeholder=\"이메일을 입력하세요.\"\r\n                                \r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                                type='text'\r\n                                \r\n                            >\r\n                                <InputMask  mask={'(999)-9999-9999'} />\r\n                            </TextField>\r\n                            <div className={classes.buttonForm}>\r\n                                <Button className={classes.buttons} variant='contained'>+</Button>\r\n                                <Button className={classes.buttons} variant='contained'>-</Button>\r\n                            </div>\r\n                        </FormControl>\r\n                    </div>\r\n\r\n                \r\n                    \r\n                    <div className={classes.inputBox}>\r\n                        <FormControl className={classes.buttonFormControl}>\r\n                            <InputLabel shrink htmlFor=\"bootstrap-input\">\r\n                                Email *\r\n                            </InputLabel>\r\n                            <TextField\r\n                                id=\"outlined-full-width\"\r\n                                placeholder=\"이메일을 입력하세요.\"\r\n\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                            <div className={classes.buttonForm}>\r\n                                <Button className={classes.buttons} variant='contained'>+</Button>\r\n                                <Button className={classes.buttons} variant='contained'>-</Button>\r\n                            </div>\r\n                        </FormControl>\r\n                    </div>\r\n\r\n                \r\n\r\n                    <div className={classes.inputBox}>\r\n                        <FormControl className={classes.buttonFormControl}>\r\n                            <InputLabel shrink htmlFor=\"bootstrap-input\">\r\n                                주소 *\r\n                            </InputLabel>\r\n                            <TextField\r\n                                id=\"outlined-full-width\"\r\n                                placeholder=\"주소를 입력하세요.\"\r\n\r\n                                margin=\"normal\"\r\n                                variant=\"outlined\"\r\n                            />\r\n                            <div className={classes.buttonForm}>\r\n                                <Button className={classes.buttons} variant='contained'>+</Button>\r\n                                <Button className={classes.buttons} variant='contained'>-</Button>\r\n                            </div>\r\n                        </FormControl>\r\n                    </div>\r\n                </div>   \r\n                \r\n\r\n            \r\n                    \r\n                \r\n                <div className={classes.input4}>\r\n                    <div className={classes.input4Button}>\r\n                        <NavLink to='/'><Button variant='contained' color='primary' fullWidth={true} >취소</Button></NavLink>\r\n                        <NavLink to='/'><Button variant='contained' color='primary' fullWidth={true} >가입</Button></NavLink>\r\n                    </div>\r\n                </div>\r\n                \r\n                \r\n            </CardContent>\r\n        </Card>\r\n\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    card: {\r\n        maxHeight: '100%',\r\n        height: '90%',\r\n        width: '60%',\r\n        textAlign: 'center',\r\n        \r\n    },\r\n    cardContent: {\r\n        maxHeight: '100%',\r\n        height: '100%',\r\n        width: '80%',\r\n        display: 'inline-block',\r\n    },\r\n    gridContainer: {\r\n\r\n        display: 'grid'\r\n    },\r\n    input4: {\r\n        marginTop: 30,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n\r\n    },\r\n    button: {\r\n        display: 'grid',\r\n\r\n    },\r\n    inputBox: {\r\n        marginTop: 5,\r\n        width: '100%',\r\n        height: '100%',\r\n\r\n    },\r\n    formControl: {\r\n        width: '100%',\r\n        height: '30%',\r\n    },\r\n    buttonFormControl: {\r\n        width: '100%',\r\n        height: '30%',\r\n        display: 'grid',\r\n        gridTemplateColumns: '5fr 1fr ',\r\n        gridGap: '10px'\r\n    },\r\n    phoneFormControl: {\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'grid',\r\n        gridTemplateColumns: '5fr 1fr ',\r\n        gridGap: '10px'\r\n    },\r\n    buttonForm: {\r\n        display: 'flex',\r\n        flexFlow: 'flex-start',\r\n        alignItems: 'center',\r\n    },\r\n    bottomBorder: {\r\n        textAlign: \"left\",\r\n        width: \"100%\",\r\n        borderBottom: \"3px solid gray\",\r\n        marginBottom: 20,\r\n        color: 'gray',\r\n    },\r\n    buttons: {\r\n        height: '50%',\r\n    },\r\n    input4Button: {\r\n        width: '30%',\r\n        height: '50%',\r\n        display: 'grid',\r\n        gridTemplateColumns: '1fr 1fr',\r\n        gridGap: '5px',\r\n    },\r\n    textMask: {\r\n        width: '100%',\r\n        height: '100%',\r\n    },\r\n})\r\n\r\n\r\n\r\nexport default SignUp;","import { makeStyles, Paper, Theme, Typography } from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\n\r\ninterface Props {\r\n\tsize: number;\r\n\tcolor: \"red\" | \"blue\" | string;\r\n}\r\n\r\nfunction HomeBox(props: Props) {\r\n\tconst { size, ...other } = props;\r\n\r\n\tconst classes = useStyles(props);\r\n\r\n\treturn (\r\n\t\t<Paper className={classes.box} {...other}>\r\n\t\t\t<Typography variant=\"subtitle1\" className={classes.text}>\r\n\t\t\t\tI'm an example how to handle dynamic styles based on props\r\n\t\t\t</Typography>\r\n\t\t</Paper>\r\n\t);\r\n}\r\n\r\nconst styledBy = (property: string, props: any, mapping: any): string =>\r\n\tmapping[props[property]];\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n\tbox: (props: Props) => ({\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tborderRadius: 8,\r\n\t\tbackground: styledBy(\"color\", props, {\r\n\t\t\tred: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\r\n\t\t\tblue: \"linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)\",\r\n\t\t}),\r\n\t\theight: props.size,\r\n\t\twidth: props.size,\r\n\t}),\r\n\r\n\ttext: {\r\n\t\tcolor: \"white\",\r\n\t},\r\n}));\r\n\r\nexport default HomeBox;\r\n","import { Button, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport * as React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport HomeBox from \"../../components/HomeBox\";\r\nimport { RootState } from \"../../reducers\";\r\n\r\ninterface Props extends RouteComponentProps<void> {}\r\n\r\nfunction HomePage(props: Props) {\r\n\tconst classes = useStyles();\r\n\tconst [boxColor, setBoxColor] = React.useState(\"red\");\r\n\tconst todoList = useSelector((state: RootState) => state.todoList);\r\n\r\n\tconst onButtonClick = () =>\r\n\t\tsetBoxColor(boxColor === \"red\" ? \"blue\" : \"red\");\r\n\r\n\treturn (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<Typography variant=\"h4\" gutterBottom>\r\n\t\t\t\tYou have {todoList.length} TODOs in your list!\r\n\t\t\t</Typography>\r\n\t\t\t<div className={classes.centerContainer}>\r\n\t\t\t\t<HomeBox size={300} color={boxColor} />\r\n\t\t\t\t<Button\r\n\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\tonClick={onButtonClick}\r\n\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t>\r\n\t\t\t\t\tChange Color\r\n\t\t\t\t</Button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n\troot: {\r\n\t\theight: \"100%\",\r\n\t\ttextAlign: \"center\",\r\n\t\tpaddingTop: 20,\r\n\t\tpaddingLeft: 15,\r\n\t\tpaddingRight: 15,\r\n\t},\r\n\r\n\tcenterContainer: {\r\n\t\tflex: 1,\r\n\t\theight: \"90%\",\r\n\t\tdisplay: \"flex\",\r\n\t\talignItems: \"center\",\r\n\t\tjustifyContent: \"center\",\r\n\t\tflexDirection: \"column\",\r\n\t},\r\n\r\n\tbutton: {\r\n\t\tmarginTop: 20,\r\n\t},\r\n});\r\n\r\nexport default HomePage;\r\n","import { useMemo } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nexport function useActions(actions: any, deps?: any): any {\r\n\tconst dispatch = useDispatch();\r\n\treturn useMemo(\r\n\t\t() => {\r\n\t\t\tif (Array.isArray(actions)) {\r\n\t\t\t\treturn actions.map(a => bindActionCreators(a, dispatch));\r\n\t\t\t}\r\n\t\t\treturn bindActionCreators(actions, dispatch);\r\n\t\t},\r\n\t\tdeps ? [dispatch, ...deps] : deps\r\n\t);\r\n}\r\n","import { Action, ActionType, Todo } from \"../model/model\";\r\n\r\nexport function addTodo(todo: Todo): Action<Todo> {\r\n\treturn {\r\n\t\ttype: ActionType.ADD_TODO,\r\n\t\tpayload: todo,\r\n\t};\r\n}\r\n\r\n// Async Function expample with redux-thunk\r\nexport function completeTodo(todoId: number) {\r\n\t// here you could do API eg\r\n\r\n\treturn (dispatch: Function, getState: Function) => {\r\n\t\tdispatch({ type: ActionType.COMPLETE_TODO, payload: todoId });\r\n\t};\r\n}\r\n\r\nexport function uncompleteTodo(todoId: number): Action<number> {\r\n\treturn {\r\n\t\ttype: ActionType.UNCOMPLETE_TODO,\r\n\t\tpayload: todoId,\r\n\t};\r\n}\r\n\r\nexport function deleteTodo(todoId: number): Action<number> {\r\n\treturn {\r\n\t\ttype: ActionType.DELETE_TODO,\r\n\t\tpayload: todoId,\r\n\t};\r\n}\r\n","// prettier-ignore\r\nimport { Checkbox, IconButton, Paper, Table, TableBody, TableCell, TableHead, TableRow } from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport * as React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useActions } from \"../actions\";\r\nimport * as TodoActions from \"../actions/todo\";\r\nimport { Todo } from \"../model/model\";\r\nimport { RootState } from \"../reducers\";\r\n\r\ninterface Props {}\r\n\r\nfunction TodoTable(props: Props) {\r\n\tconst classes = useStyles();\r\n\tconst todoList = useSelector((state: RootState) => state.todoList);\r\n\tconst todoActions = useActions(TodoActions);\r\n\r\n\tconst onRowClick = (todo: Todo) => {\r\n\t\tif (todo.completed) {\r\n\t\t\ttodoActions.uncompleteTodo(todo.id);\r\n\t\t} else {\r\n\t\t\ttodoActions.completeTodo(todo.id);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Paper className={classes.paper}>\r\n\t\t\t<Table className={classes.table}>\r\n\t\t\t\t<TableHead>\r\n\t\t\t\t\t<TableRow>\r\n\t\t\t\t\t\t<TableCell padding=\"default\">Completed</TableCell>\r\n\t\t\t\t\t\t<TableCell padding=\"default\">Text</TableCell>\r\n\t\t\t\t\t\t<TableCell padding=\"default\">Delete</TableCell>\r\n\t\t\t\t\t</TableRow>\r\n\t\t\t\t</TableHead>\r\n\t\t\t\t<TableBody>\r\n\t\t\t\t\t{todoList.map((n: Todo) => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<TableRow\r\n\t\t\t\t\t\t\t\tkey={n.id}\r\n\t\t\t\t\t\t\t\thover\r\n\t\t\t\t\t\t\t\tonClick={event => onRowClick(n)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<TableCell padding=\"none\">\r\n\t\t\t\t\t\t\t\t\t<Checkbox checked={n.completed} />\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell padding=\"none\">{n.text}</TableCell>\r\n\t\t\t\t\t\t\t\t<TableCell padding=\"none\">\r\n\t\t\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\t\t\taria-label=\"Delete\"\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"default\"\r\n\t\t\t\t\t\t\t\t\t\tonClick={() =>\r\n\t\t\t\t\t\t\t\t\t\t\ttodoActions.deleteTodo(n.id)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<DeleteIcon />\r\n\t\t\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t\t</TableCell>\r\n\t\t\t\t\t\t\t</TableRow>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</TableBody>\r\n\t\t\t</Table>\r\n\t\t</Paper>\r\n\t);\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n\tpaper: {\r\n\t\twidth: \"100%\",\r\n\t\tminWidth: 260,\r\n\t\tdisplay: \"inline-block\",\r\n\t},\r\n\ttable: {\r\n\t\twidth: \"100%\",\r\n\t},\r\n});\r\n\r\nexport default TodoTable;\r\n","import TodoTable from \"./TodoTable\";\r\n\r\nexport { TodoTable };\r\n\r\nexport default TodoTable;\r\n","// prettier-ignore\r\nimport { Button, Dialog, DialogActions, DialogTitle, TextField } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport * as React from \"react\";\r\nimport { useActions } from \"../actions\";\r\nimport * as TodoActions from \"../actions/todo\";\r\n\r\ninterface Props {\r\n\topen: boolean;\r\n\tonClose: () => void;\r\n}\r\n\r\nfunction TodoDialog(props: Props) {\r\n\tconst { open, onClose } = props;\r\n\tconst classes = useStyles();\r\n\tconst [newTodoText, setNewTodoText] = React.useState(\"\");\r\n\tconst todoActions = useActions(TodoActions);\r\n\r\n\tconst handleClose = () => {\r\n\t\ttodoActions.addTodo({\r\n\t\t\tid: Math.random(),\r\n\t\t\tcompleted: false,\r\n\t\t\ttext: newTodoText,\r\n\t\t});\r\n\t\tonClose();\r\n\r\n\t\t// reset todo text if user reopens the dialog\r\n\t\tsetNewTodoText(\"\");\r\n\t};\r\n\r\n\tconst handleChange = (event: any) => {\r\n\t\tsetNewTodoText(event.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Dialog open={open} onClose={handleClose}>\r\n\t\t\t<DialogTitle>Add a new TODO</DialogTitle>\r\n\t\t\t<TextField\r\n\t\t\t\tid=\"multiline-flexible\"\r\n\t\t\t\tmultiline\r\n\t\t\t\tvalue={newTodoText}\r\n\t\t\t\tonChange={handleChange}\r\n\t\t\t\tclassName={classes.textField}\r\n\t\t\t/>\r\n\t\t\t<DialogActions>\r\n\t\t\t\t<Button color=\"primary\" onClick={handleClose}>\r\n\t\t\t\t\tOK\r\n\t\t\t\t</Button>\r\n\t\t\t</DialogActions>\r\n\t\t</Dialog>\r\n\t);\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n\ttextField: {\r\n\t\twidth: \"80%\",\r\n\t\tmargin: 20,\r\n\t},\r\n});\r\n\r\nexport default TodoDialog;\r\n","import { Button, Grid, Typography } from \"@material-ui/core\";\r\nimport { Theme } from \"@material-ui/core/styles\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport * as React from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport TodoTable from \"../../components\";\r\nimport TodoDialog from \"../../components/TodoDialog\";\r\n\r\ninterface Props extends RouteComponentProps<void> {}\r\n\r\nfunction TodoPage(props: Props) {\r\n\tconst classes = useStyles();\r\n\tconst [open, setOpen] = React.useState(false);\r\n\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\r\n\tconst handleAddTodo = () => {\r\n\t\tsetOpen(true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Grid container className={classes.root}>\r\n\t\t\t<TodoDialog open={open} onClose={handleClose} />\r\n\t\t\t<Grid item xs={6}>\r\n\t\t\t\t<Typography variant=\"h4\" gutterBottom>\r\n\t\t\t\t\tTodo List\r\n\t\t\t\t</Typography>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={6}>\r\n\t\t\t\t<div className={classes.buttonContainer}>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName={classes.button}\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\tcolor=\"secondary\"\r\n\t\t\t\t\t\tonClick={handleAddTodo}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAdd Todo\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</Grid>\r\n\t\t\t<Grid item xs={12}>\r\n\t\t\t\t<TodoTable />\r\n\t\t\t</Grid>\r\n\t\t</Grid>\r\n\t);\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n\troot: {\r\n\t\tpadding: 20,\r\n\t\t[theme.breakpoints.down(\"md\")]: {\r\n\t\t\tpaddingTop: 50,\r\n\t\t\tpaddingLeft: 15,\r\n\t\t\tpaddingRight: 15,\r\n\t\t},\r\n\t},\r\n\r\n\tbuttonContainer: {\r\n\t\twidth: \"100%\",\r\n\t\tdisplay: \"flex\",\r\n\t\tjustifyContent: \"flex-end\",\r\n\t},\r\n\r\n\tbutton: {\r\n\t\tmarginBottom: 15,\r\n\t},\r\n}));\r\n\r\nexport default TodoPage;\r\n","import FindIdPage from './pages/sub/FindIdPage';\r\nimport EmailFindId from './pages/sub/EmailFindId';\r\nimport PhoneFindId from './pages/sub/PhoneFindId';\r\nimport FindPasswordPage from './pages/sub/FindPasswordPage';\r\nimport ChoiceFindPW from './pages/sub/ChoiceFindPW';\r\nimport LoginPage from './pages/sub/LoginPage';\r\nimport SignUp from './pages/sub/SignUp';\r\n\r\nimport HomePage from './pages/main/HomePage';\r\nimport TodoPage from './pages/main/TodoPage';\r\n\r\n\r\nconst routes = [\r\n    {\r\n        path: '/login',\r\n        component: LoginPage,\r\n        layout: '/nms/sub',\r\n    },\r\n    {\r\n        path: '/findId',\r\n        component: FindIdPage,\r\n        layout: '/nms/sub',\r\n    },\r\n    {\r\n        path: '/emailFindId',\r\n        component: EmailFindId,\r\n        layout: '/nms/sub',\r\n    },\r\n    {\r\n        path: '/phoneFindId',\r\n        component: PhoneFindId,\r\n        layout: '/nms/sub'\r\n    },\r\n    {\r\n        path: '/findPassword',\r\n        component: FindPasswordPage,\r\n        layout: '/nms/sub'\r\n    },\r\n    {\r\n        path: '/choiceFindPW',\r\n        component: ChoiceFindPW,\r\n        layout: '/nms/sub'\r\n    },\r\n    {\r\n        path: '/signUp',\r\n        component: SignUp,\r\n        layout: '/nms/sub',\r\n    },\r\n    {\r\n        path: '/homePage',\r\n        component: HomePage,\r\n        layout: '/main',\r\n    },\r\n    {\r\n        path: '/todoPage',\r\n        component: TodoPage,\r\n        layout: '/main',\r\n    },\r\n]\r\n\r\nexport default routes;","// prettier-ignore\r\nimport { withWidth } from \"@material-ui/core\";\r\nimport { Theme } from \"@material-ui/core/styles\";\r\nimport { WithWidth } from \"@material-ui/core/withWidth\";\r\n\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, RouteComponentProps, Router, Switch, Redirect } from \"react-router-dom\";\r\nimport { history } from \"./../configureStore\";\r\nimport { Todo } from \"./../model/model\";\r\n\r\n\r\n\r\n//import { LoginPage } from './pages/sub';\r\n\r\nimport { RootState } from \"./../reducers/index\";\r\nimport withRoot from \"./../withRoot\";\r\nimport routes from './../routes.js';\r\n\r\nfunction RouteTag() {\r\n\tconst classes = useStyles();\r\n\tconst switchRoutes = (\r\n\t\t<div className={classes.root}>\r\n\t\t\t<Switch>\r\n\t\t\t\t{\r\n\t\t\t\t\troutes.map((v: any, key: number) => {\r\n\t\t\t\t\t\tif(v.layout==='/nms/sub') {\r\n\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t<Route\t\r\n\t\t\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\t\t\tpath={v.layout + v.path}\r\n\t\t\t\t\t\t\t\t\tcomponent={v.component}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t)\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t<Redirect from='/' to='/nms/sub/login'  />\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t\t\r\n\t)\r\n\t// return ( \r\n\t// \t<div className={classes.content}>\r\n\t// \t\t<Route exact={true} path=\"/sub/login\" component={LoginPage} />\r\n\t// \t\t<Route exact={true} path=\"/main/home\" component={HomePage} />\r\n\t// \t\t<Route exact={true} path=\"/main/todo\" component={TodoPage} />\r\n\t\t\t\r\n\t// \t</div>\r\n\t// )\r\n\r\n\treturn switchRoutes;\r\n}\r\n\r\n\r\n\r\ninterface Props extends RouteComponentProps<void>, WithWidth {\r\n\ttodoList: Todo[];\r\n}\r\n\r\nfunction Sub(props?: Props) {\r\n\t//const [mobileOpen, setMobileOpen] = React.useState(true);\r\n\r\n\tif (!props) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t\r\n\r\n\treturn (\r\n\t\t\r\n\t\t<Router history={history}>\r\n\t\t\t<RouteTag />\r\n\t\t</Router>\r\n\t\t\r\n\t);\r\n}\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n\troot: {\r\n\t\twidth: \"100%\",\r\n\t\theight: \"100%\",\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n\t},\t\r\n\tcontent: {\r\n\t\t\r\n\t\twidth: \"100%\",\r\n\t\theight: \"100%\",\r\n\t\t\r\n\t},\r\n}));\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n\treturn {\r\n\t\ttodoList: state.todoList,\r\n\t};\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRoot(withWidth()(Sub)));\r\n","// prettier-ignore\r\nimport { AppBar, Badge, Divider, Drawer as DrawerMui, Hidden, IconButton, List, ListItem, ListItemIcon, ListItemText, Toolbar, Typography, withWidth } from \"@material-ui/core\";\r\nimport { Theme } from \"@material-ui/core/styles\";\r\nimport { isWidthUp, WithWidth } from \"@material-ui/core/withWidth\";\r\nimport FormatListNumberedIcon from \"@material-ui/icons/FormatListNumbered\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, RouteComponentProps, Router, Switch, Redirect } from \"react-router-dom\";\r\nimport { history } from \"../configureStore\";\r\nimport { Todo } from \"../model/model\";\r\nimport { RootState } from \"../reducers/index\";\r\nimport withRoot from \"../withRoot\";\r\nimport routes from './../routes.js';\r\n\r\n\r\n\r\n\r\nfunction Routes(): any {\r\n\tconst classes = useStyles();\r\n\tconst switchRoutes = (\r\n\t\t<div className={classes.content}>\r\n\t\t\t<Switch>\r\n\t\t\t\t{\r\n\t\t\t\t\troutes.map((v: any, key: number) => {\r\n\t\t\t\t\t\tif(v.layout==='/main') {\r\n\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t<Route\t\r\n\t\t\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\t\t\tpath={v.layout + v.path}\r\n\t\t\t\t\t\t\t\t\tcomponent={v.component}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t)\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t<Redirect from='/main' to='/main/homePage'  />\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t)\r\n\treturn switchRoutes;\r\n}\r\n\r\nfunction Drawer(props: { todoList: Todo[] }) {\r\n\tconst classes = useStyles();\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div className={classes.drawerHeader} />\r\n\t\t\t<Divider />\r\n\t\t\t<List>\r\n\t\t\t\t<ListItem button onClick={() => history.push(\"/\")}>\r\n\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t<HomeIcon />\r\n\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t<ListItemText primary=\"Home\" />\r\n\t\t\t\t</ListItem>\r\n\t\t\t</List>\r\n\t\t\t<Divider />\r\n\t\t\t<List>\r\n\t\t\t\t<ListItem button onClick={() => history.push(\"/todo\")}>\r\n\t\t\t\t\t<ListItemIcon>\r\n\t\t\t\t\t\t<TodoIcon todoList={props.todoList} />\r\n\t\t\t\t\t</ListItemIcon>\r\n\t\t\t\t\t<ListItemText primary=\"Todo\" />\r\n\t\t\t\t</ListItem>\r\n\t\t\t</List>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\ninterface Props extends RouteComponentProps<void>, WithWidth {\r\n\ttodoList: Todo[];\r\n}\r\n\r\nfunction Main(props?: Props) {\r\n\tconst classes = useStyles();\r\n\tconst [mobileOpen, setMobileOpen] = React.useState(true);\r\n\r\n\tif (!props) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\tconst handleDrawerToggle = () => {\r\n\t\tsetMobileOpen(!mobileOpen);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Router history={history}>\r\n\t\t\t<div className={classes.root}>\r\n\t\t\t\t<div className={classes.appFrame}>\r\n\t\t\t\t\t<AppBar className={classes.appBar}>\r\n\t\t\t\t\t\t<Toolbar>\r\n\t\t\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\t\t\taria-label=\"open drawer\"\r\n\t\t\t\t\t\t\t\tonClick={handleDrawerToggle}\r\n\t\t\t\t\t\t\t\tclassName={classes.navIconHide}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<MenuIcon />\r\n\t\t\t\t\t\t\t</IconButton>\r\n\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t\t\t\t\tcolor=\"inherit\"\r\n\t\t\t\t\t\t\t\tnoWrap={isWidthUp(\"sm\", props.width)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tCreate-React-App with Material-UI, Typescript,\r\n\t\t\t\t\t\t\t\tRedux and Routing\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t</Toolbar>\r\n\t\t\t\t\t</AppBar>\r\n\t\t\t\t\t<Hidden mdUp>\r\n\t\t\t\t\t\t<DrawerMui\r\n\t\t\t\t\t\t\tvariant=\"temporary\"\r\n\t\t\t\t\t\t\tanchor={\"left\"}\r\n\t\t\t\t\t\t\topen={mobileOpen}\r\n\t\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\t\tpaper: classes.drawerPaper,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tonClose={handleDrawerToggle}\r\n\t\t\t\t\t\t\tModalProps={{\r\n\t\t\t\t\t\t\t\tkeepMounted: true, // Better open performance on mobile.\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Drawer todoList={props.todoList} />\r\n\t\t\t\t\t\t</DrawerMui>\r\n\t\t\t\t\t</Hidden>\r\n\t\t\t\t\t<Hidden smDown>\r\n\t\t\t\t\t\t<DrawerMui\r\n\t\t\t\t\t\t\tvariant=\"permanent\"\r\n\t\t\t\t\t\t\topen\r\n\t\t\t\t\t\t\tclasses={{\r\n\t\t\t\t\t\t\t\tpaper: classes.drawerPaper,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Drawer todoList={props.todoList} />\r\n\t\t\t\t\t\t</DrawerMui>\r\n\t\t\t\t\t</Hidden>\r\n\t\t\t\t\t<Routes />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\nfunction TodoIcon(props: { todoList: Todo[] }) {\r\n\tlet uncompletedTodos = props.todoList.filter(t => t.completed === false);\r\n\r\n\tif (uncompletedTodos.length > 0) {\r\n\t\treturn (\r\n\t\t\t<Badge color=\"secondary\" badgeContent={uncompletedTodos.length}>\r\n\t\t\t\t<FormatListNumberedIcon />\r\n\t\t\t</Badge>\r\n\t\t);\r\n\t} else {\r\n\t\treturn <FormatListNumberedIcon />;\r\n\t}\r\n}\r\n\r\nconst drawerWidth = 240;\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n\troot: {\r\n\t\twidth: \"100%\",\r\n\t\theight: \"100%\",\r\n\t\tzIndex: 1,\r\n\t\toverflow: \"hidden\",\r\n\t},\r\n\tappFrame: {\r\n\t\tposition: \"relative\",\r\n\t\tdisplay: \"flex\",\r\n\t\twidth: \"100%\",\r\n\t\theight: \"100%\",\r\n\t},\r\n\tappBar: {\r\n\t\tzIndex: theme.zIndex.drawer + 1,\r\n\t\tposition: \"absolute\",\r\n\t},\r\n\tnavIconHide: {\r\n\t\t[theme.breakpoints.up(\"md\")]: {\r\n\t\t\tdisplay: \"none\",\r\n\t\t},\r\n\t},\r\n\tdrawerHeader: theme.mixins.toolbar,\r\n\tdrawerPaper: {\r\n\t\twidth: 250,\r\n\t\tbackgroundColor: theme.palette.background.default,\r\n\t\t[theme.breakpoints.up(\"md\")]: {\r\n\t\t\twidth: drawerWidth,\r\n\t\t\tposition: \"relative\",\r\n\t\t\theight: \"100%\",\r\n\t\t},\r\n\t},\r\n\tcontent: {\r\n\t\tbackgroundColor: theme.palette.background.default,\r\n\t\twidth: \"100%\",\r\n\t\theight: \"calc(100% - 56px)\",\r\n\t\tmarginTop: 56,\r\n\t\t[theme.breakpoints.up(\"sm\")]: {\r\n\t\t\theight: \"calc(100% - 64px)\",\r\n\t\t\tmarginTop: 64,\r\n\t\t},\r\n\t},\r\n}));\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n\treturn {\r\n\t\ttodoList: state.todoList,\r\n\t};\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRoot(withWidth()(Main)));\r\n","// prettier-ignore\r\nimport { withWidth } from \"@material-ui/core\";\r\nimport { WithWidth } from \"@material-ui/core/withWidth\";\r\nimport * as React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, RouteComponentProps, Router, Switch, Redirect } from \"react-router-dom\";\r\nimport { history } from \"./configureStore\";\r\nimport { Todo } from \"./model/model\";\r\nimport { RootState } from \"./reducers/index\";\r\nimport withRoot from \"./withRoot\";\r\n\r\n//import { LoginPage } from './pages/sub';\r\n\r\n\r\nimport Sub from './layout/Sub';\r\nimport Main from './layout/Main';\r\n\r\n\r\n\r\n\r\ninterface Props extends RouteComponentProps<void>, WithWidth {\r\n\ttodoList: Todo[];\r\n}\r\n\r\nfunction App(props?: Props) {\r\n\t\r\n\tconst [mobileOpen, setMobileOpen] = React.useState(true);\r\n\r\n\tif (!props) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<Router history={history} >\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path='/nms/sub' component={Sub} />\r\n\t\t\t\t<Route path='/main' component={Main} />\r\n\t\t\t\t<Redirect from='/' to='/nms/sub/login' />\r\n\t\t\t</Switch>\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n\treturn {\r\n\t\ttodoList: state.todoList,\r\n\t};\r\n}\r\n\r\nexport default connect(mapStateToProps)(withRoot(withWidth()(App)));\r\n\r\n\r\n","import { Typography } from \"@material-ui/core\";\r\nimport * as React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport App from \"./App\";\r\nimport configureStore from \"./configureStore\";\r\n\r\nconst { persistor, store } = configureStore();\r\n\r\nfunction ReduxRoot() {\r\n\treturn (\r\n\t\t<Provider store={store}>\r\n\t\t\t<PersistGate\r\n\t\t\t\tloading={<Typography>Loading...</Typography>}\r\n\t\t\t\tpersistor={persistor}\r\n\t\t\t>\r\n\t\t\t\t<App />\r\n\t\t\t</PersistGate>\r\n\t\t</Provider>\r\n\t);\r\n}\r\n\r\nexport default ReduxRoot;\r\n","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport ReduxRoot from \"./ReduxRoot\";\r\n\r\nconst rootEl = document.getElementById(\"root\");\r\nReactDOM.render(<ReduxRoot />, rootEl);\r\n\r\n// comment in for PWA with service worker in production mode\r\n// registerServiceWorker();\r\n"],"sourceRoot":""}